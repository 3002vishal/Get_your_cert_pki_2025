<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>User Profiles Dashboard</title>
  <style>
    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
    }

    body {
      font-family: 'Inter', -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, sans-serif;
      background: linear-gradient(135deg, #667eea 0%, #764ba2 50%, #f093fb 100%);
      min-height: 100vh;
      padding: 0;
      position: relative;
      overflow-x: auto;
    }

    /* Animated background elements */
    body::before {
      content: '';
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background: 
        radial-gradient(circle at 20% 80%, rgba(255, 255, 255, 0.1) 0%, transparent 50%),
        radial-gradient(circle at 80% 20%, rgba(255, 255, 255, 0.15) 0%, transparent 50%),
        radial-gradient(circle at 40% 40%, rgba(255, 255, 255, 0.05) 0%, transparent 50%);
      animation: float 20s ease-in-out infinite;
      pointer-events: none;
      z-index: 0;
    }

    @keyframes float {
      0%, 100% { transform: translateY(0px) rotate(0deg); }
      33% { transform: translateY(-20px) rotate(2deg); }
      66% { transform: translateY(10px) rotate(-1deg); }
    }

    .container {
      position: relative;
      z-index: 1;
      max-width: 1400px;
      margin: 0 auto;
      padding: 40px 20px;
    }

    .header {
      text-align: center;
      margin-bottom: 40px;
      animation: slideDown 0.8s ease-out;
    }

    @keyframes slideDown {
      from {
        opacity: 0;
        transform: translateY(-30px);
      }
      to {
        opacity: 1;
        transform: translateY(0);
      }
    }

    .header h1 {
      font-size: 3rem;
      font-weight: 700;
      color: #fff;
      margin-bottom: 10px;
      text-shadow: 2px 2px 4px rgba(0,0,0,0.3);
      background: linear-gradient(135deg, #fff, #f0f8ff);
      -webkit-background-clip: text;
      -webkit-text-fill-color: transparent;
      background-clip: text;
    }

    .header p {
      font-size: 1.2rem;
      color: rgba(255, 255, 255, 0.9);
      font-weight: 300;
    }

    .stats-grid {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
      gap: 20px;
      margin-bottom: 40px;
      animation: fadeInUp 0.8s ease-out 0.2s both;
    }

    @keyframes fadeInUp {
      from {
        opacity: 0;
        transform: translateY(30px);
      }
      to {
        opacity: 1;
        transform: translateY(0);
      }
    }

    .stat-card {
      background: rgba(255, 255, 255, 0.95);
      backdrop-filter: blur(10px);
      border-radius: 16px;
      padding: 24px;
      text-align: center;
      box-shadow: 0 8px 32px rgba(0,0,0,0.1);
      border: 1px solid rgba(255, 255, 255, 0.2);
      transition: all 0.3s ease;
    }

    .stat-card:hover {
      transform: translateY(-5px);
      box-shadow: 0 16px 40px rgba(0,0,0,0.15);
    }

    .stat-number {
      font-size: 2.5rem;
      font-weight: 700;
      color: #667eea;
      margin-bottom: 8px;
    }

    .stat-label {
      color: #64748b;
      font-weight: 500;
      text-transform: uppercase;
      letter-spacing: 0.5px;
      font-size: 0.9rem;
    }

    .table-container {
      background: rgba(255, 255, 255, 0.95);
      backdrop-filter: blur(20px);
      border-radius: 20px;
      overflow: hidden;
      box-shadow: 0 20px 60px rgba(0,0,0,0.15);
      border: 1px solid rgba(255, 255, 255, 0.2);
      animation: fadeInUp 0.8s ease-out 0.4s both;
    }

    table {
      width: 100%;
      border-collapse: collapse;
    }

    th {
      background: linear-gradient(135deg, #667eea, #764ba2);
      color: #fff;
      padding: 20px 16px;
      text-align: left;
      font-weight: 600;
      font-size: 0.95rem;
      text-transform: uppercase;
      letter-spacing: 0.5px;
      position: sticky;
      top: 0;
      z-index: 10;
    }

    td {
      padding: 16px;
      border-bottom: 1px solid rgba(226, 232, 240, 0.5);
      font-size: 0.95rem;
      color: #334155;
    }

    tr {
      transition: all 0.3s ease;
    }

    tr:nth-child(even) {
      background: rgba(248, 250, 252, 0.5);
    }

    tr:hover {
      background: rgba(99, 102, 241, 0.08);
      transform: scale(1.02);
      box-shadow: 0 4px 20px rgba(99, 102, 241, 0.1);
    }

    .status-check {
      display: inline-flex;
      align-items: center;
      justify-content: center;
      width: 32px;
      height: 32px;
      border-radius: 50%;
      font-weight: bold;
      font-size: 1.2rem;
    }

    .status-present {
      background: linear-gradient(135deg, #10b981, #059669);
      color: white;
      box-shadow: 0 4px 12px rgba(16, 185, 129, 0.3);
    }

    .status-absent {
      background: linear-gradient(135deg, #ef4444, #dc2626);
      color: white;
      box-shadow: 0 4px 12px rgba(239, 68, 68, 0.3);
    }

    .download-btn {
      display: inline-flex;
      align-items: center;
      gap: 8px;
      padding: 12px 20px;
      background: linear-gradient(135deg, #667eea, #764ba2);
      color: white;
      text-decoration: none;
      border-radius: 12px;
      font-size: 0.9rem;
      font-weight: 600;
      transition: all 0.3s ease;
      box-shadow: 0 4px 15px rgba(102, 126, 234, 0.3);
    }

    .download-btn:hover {
      transform: translateY(-2px);
      box-shadow: 0 8px 25px rgba(102, 126, 234, 0.4);
      background: linear-gradient(135deg, #5a67d8, #6b46c1);
    }

    .download-btn:active {
      transform: translateY(0);
    }

    .search-box {
      width: 100%;
      max-width: 400px;
      margin: 0 auto 30px;
      position: relative;
    }

    .search-input {
      width: 100%;
      padding: 16px 50px 16px 20px;
      font-size: 1rem;
      border: none;
      border-radius: 50px;
      background: rgba(255, 255, 255, 0.9);
      backdrop-filter: blur(10px);
      box-shadow: 0 8px 32px rgba(0,0,0,0.1);
      outline: none;
      transition: all 0.3s ease;
    }

    .search-input:focus {
      box-shadow: 0 8px 32px rgba(102, 126, 234, 0.2);
      background: rgba(255, 255, 255, 0.95);
    }

    .search-icon {
      position: absolute;
      right: 20px;
      top: 50%;
      transform: translateY(-50%);
      color: #667eea;
      font-size: 1.2rem;
    }

    .emoji {
      font-size: 1.5rem;
      margin-left: 10px;
      animation: bounce 2s ease-in-out infinite;
    }

    @keyframes bounce {
      0%, 20%, 50%, 80%, 100% { transform: translateY(0); }
      40% { transform: translateY(-10px); }
      60% { transform: translateY(-5px); }
    }

    /* Responsive design */
    @media (max-width: 768px) {
      .container { padding: 20px 10px; }
      .header h1 { font-size: 2rem; }
      .header p { font-size: 1rem; }
      
      .table-container {
        margin: 0 -10px;
        border-radius: 0;
      }
      
      table {
        font-size: 0.85rem;
      }
      
      th, td {
        padding: 12px 8px;
      }
      
      .download-btn {
        padding: 8px 12px;
        font-size: 0.8rem;
      }
    }

    /* Custom scrollbar */
    ::-webkit-scrollbar {
      width: 8px;
      height: 8px;
    }

    ::-webkit-scrollbar-track {
      background: rgba(255, 255, 255, 0.1);
    }

    ::-webkit-scrollbar-thumb {
      background: linear-gradient(135deg, #667eea, #764ba2);
      border-radius: 4px;
    }

    ::-webkit-scrollbar-thumb:hover {
      background: linear-gradient(135deg, #5a67d8, #6b46c1);
    }
  </style>
</head>
<body>
  <div class="container">
    <div class="header">
      <h1>User Profiles Dashboard <span class="emoji">ðŸŽ‰</span></h1>
    </div>

    

    <div class="table-container">
      <table id="userTable">
        <thead>
          <tr>
            <th>Name</th>
            <th>Designation</th>
            <th>Organization</th>
            <th>Email</th>
            <th>Mobile</th>
            <th>City</th>
            <th>Mode</th>
            <th>Day 1</th>
            <th>Day 2</th>
            <th>Certificate</th>
          </tr>
        </thead>
        <tbody>
          <% users.forEach(user => { %>
            <tr>
              <td><%= user.Name %></td>
              <td><%= user.Designation %></td>
              <td><%= user.Organization %></td>
              <td><%= user.Email %></td>
              <td><%= user.Mobile %></td>
              <td><%= user.City %></td>
              <td><%= user.Mode %></td>
              <td>
                <% if (user.AttendanceDay1) { %>
                  <span class="status-check status-present">âœ“</span>
                <% } else { %>
                  <span class="status-check status-absent">âœ—</span>
                <% } %>
              </td>
              <td>
                <% if (user.AttendanceDay2) { %>
                  <span class="status-check status-present">âœ“</span>
                <% } else { %>
                  <span class="status-check status-absent">âœ—</span>
                <% } %>
              </td>
              <td>
                <a href="/certificate/<%= user.Id %>" class="download-btn">
                  <span>ðŸ“œ</span>
                  Download
                </a>
              </td>
            </tr>
          <% }) %>
        </tbody>
      </table>
    </div>
  </div>

  <script>
    // Calculate and display statistics
    function updateStats() {
      const rows = document.querySelectorAll('#userTable tbody tr');
      let totalUsers = rows.length;
      let day1Count = 0;
      let day2Count = 0;
      let fullAttendanceCount = 0;

      rows.forEach(row => {
        const day1Present = row.cells[7].querySelector('.status-present');
        const day2Present = row.cells[8].querySelector('.status-present');
        
        if (day1Present) day1Count++;
        if (day2Present) day2Count++;
        if (day1Present && day2Present) fullAttendanceCount++;
      });

      // Animate counter updates
      animateCounter('totalUsers', totalUsers);
      animateCounter('day1Attendance', day1Count);
      animateCounter('day2Attendance', day2Count);
      animateCounter('fullAttendance', fullAttendanceCount);
    }

    function animateCounter(elementId, targetValue) {
      const element = document.getElementById(elementId);
      const startValue = parseInt(element.textContent) || 0;
      const increment = targetValue > startValue ? 1 : -1;
      const duration = 1000;
      const stepTime = duration / Math.abs(targetValue - startValue);

      let currentValue = startValue;
      const timer = setInterval(() => {
        currentValue += increment;
        element.textContent = currentValue;
        
        if (currentValue === targetValue) {
          clearInterval(timer);
        }
      }, stepTime);
    }

    // Search functionality
    document.getElementById('searchInput').addEventListener('input', function(e) {
      const searchTerm = e.target.value.toLowerCase();
      const rows = document.querySelectorAll('#userTable tbody tr');

      rows.forEach(row => {
        const text = row.textContent.toLowerCase();
        row.style.display = text.includes(searchTerm) ? '' : 'none';
      });
    });

    // Initialize stats when page loads
    document.addEventListener('DOMContentLoaded', function() {
      setTimeout(updateStats, 500);
    });

    // Add hover effect to table rows
    document.addEventListener('DOMContentLoaded', function() {
      const rows = document.querySelectorAll('#userTable tbody tr');
      rows.forEach((row, index) => {
        row.style.animationDelay = `${index * 0.05}s`;
        row.classList.add('fade-in-row');
      });
    });
  </script>

  <style>
    .fade-in-row {
      animation: fadeInRow 0.6s ease-out both;
    }

    @keyframes fadeInRow {
      from {
        opacity: 0;
        transform: translateX(-20px);
      }
      to {
        opacity: 1;
        transform: translateX(0);
      }
    }
  </style>
</body>
</html>